export declare const TREE_TRACKER_URL = "https://tree.self.xyz";
export declare const CSCA_TREE_DEPTH = 12;
export declare const DSC_TREE_DEPTH = 21;
export declare const COMMITMENT_TREE_DEPTH = 33;
export declare const DEFAULT_USER_ID_TYPE = "uuid";
export declare const REDIRECT_URL = "https://redirect.self.xyz";
export declare const WS_RPC_URL_VC_AND_DISCLOSE = "ws://disclose.proving.self.xyz:8888/";
export declare const WS_DB_RELAYER = "wss://websocket.self.xyz";
export declare const WS_DB_RELAYER_STAGING = "wss://websocket.staging.self.xyz";
export declare const API_URL = "https://api.self.xyz";
export declare const TREE_URL = "https://tree.self.xyz";
export declare const TREE_URL_STAGING = "https://tree.staging.self.xyz";
export declare const API_URL_STAGING = "https://api.staging.self.xyz";
export declare const CSCA_TREE_URL = "https://tree.self.xyz/csca";
export declare const DSC_TREE_URL = "https://tree.self.xyz/dsc";
export declare const CSCA_TREE_URL_STAGING = "https://tree.staging.self.xyz/csca";
export declare const DSC_TREE_URL_STAGING = "https://tree.staging.self.xyz/dsc";
export declare const IDENTITY_TREE_URL = "https://tree.self.xyz/identity";
export declare const IDENTITY_TREE_URL_STAGING = "https://tree.staging.self.xyz/identity";
export declare const PASSPORT_ATTESTATION_ID = "1";
export declare const CHAIN_NAME = "celo";
export declare const RPC_URL = "https://forno.celo.org";
export declare const PCR0_MANAGER_ADDRESS = "0xE36d4EE5Fd3916e703A46C21Bb3837dB7680C8B8";
export declare const DEVELOPMENT_MODE = true;
export declare const DEFAULT_MAJORITY = "18";
export declare const hashAlgos: string[];
export declare const saltLengths: number[];
/**
 * Maximum number of countries in the forbidden countries list.
 *
 * IMPORTANT: This value must match in both backend and frontend SDK.
 * Any mismatch will result in an INVALID_FORBIDDEN_COUNTRIES error.
 */
export declare const MAX_FORBIDDEN_COUNTRIES_LIST_LENGTH = 40;
export declare const DEPLOYED_CIRCUITS_REGISTER: string[];
export declare const OFAC_TREE_LEVELS = 64;
export declare const DEPLOYED_CIRCUITS_DSC: string[];
export declare const MAX_PADDED_ECONTENT_LEN: Partial<Record<(typeof hashAlgos)[number], number>>;
export declare const MAX_PADDED_SIGNED_ATTR_LEN: Record<(typeof hashAlgos)[number], number>;
export declare const MAX_CERT_BYTES: Partial<Record<keyof typeof SignatureAlgorithmIndex, number>>;
export declare const ECDSA_K_LENGTH_FACTOR = 2;
export declare const CIRCUIT_TYPES: string[];
export declare const circuitNameFromMode: {
    prove: string;
    prove_onchain: string;
    prove_offchain: string;
    register: string;
    vc_and_disclose: string;
    dsc: string;
};
export declare enum RegisterVerifierId {
    register_sha256_sha256_sha256_rsa_65537_4096 = 0,
    register_sha256_sha256_sha256_ecdsa_brainpoolP384r1 = 1,
    register_sha256_sha256_sha256_ecdsa_secp256r1 = 2,
    register_sha256_sha256_sha256_ecdsa_secp384r1 = 3,
    register_sha256_sha256_sha256_rsa_3_4096 = 4,
    register_sha256_sha256_sha256_rsapss_3_32_2048 = 5,
    register_sha256_sha256_sha256_rsapss_65537_32_2048 = 6,
    register_sha256_sha256_sha256_rsapss_65537_32_3072 = 7,
    register_sha384_sha384_sha384_ecdsa_brainpoolP384r1 = 8,
    register_sha384_sha384_sha384_ecdsa_brainpoolP512r1 = 9,
    register_sha384_sha384_sha384_ecdsa_secp384r1 = 10,
    register_sha512_sha512_sha512_ecdsa_brainpoolP512r1 = 11,
    register_sha512_sha512_sha512_rsa_65537_4096 = 12,
    register_sha512_sha512_sha512_rsapss_65537_64_2048 = 13,
    register_sha1_sha1_sha1_rsa_65537_4096 = 14,
    register_sha1_sha256_sha256_rsa_65537_4096 = 15,
    register_sha224_sha224_sha224_ecdsa_brainpoolP224r1 = 16,
    register_sha256_sha224_sha224_ecdsa_secp224r1 = 17,
    register_sha256_sha256_sha256_ecdsa_brainpoolP256r1 = 18,
    register_sha1_sha1_sha1_ecdsa_brainpoolP224r1 = 19,
    register_sha384_sha384_sha384_rsapss_65537_48_2048 = 20,
    register_sha1_sha1_sha1_ecdsa_secp256r1 = 21,
    register_sha256_sha256_sha256_rsapss_65537_64_2048 = 22,
    register_sha512_sha512_sha256_rsa_65537_4096 = 23,
    register_sha512_sha512_sha512_ecdsa_secp521r1 = 24
}
export declare enum DscVerifierId {
    dsc_sha1_ecdsa_brainpoolP256r1 = 0,
    dsc_sha1_rsa_65537_4096 = 1,
    dsc_sha256_ecdsa_brainpoolP256r1 = 2,
    dsc_sha256_ecdsa_brainpoolP384r1 = 3,
    dsc_sha256_ecdsa_secp256r1 = 4,
    dsc_sha256_ecdsa_secp384r1 = 5,
    dsc_sha256_ecdsa_secp521r1 = 6,
    dsc_sha256_rsa_65537_4096 = 7,
    dsc_sha256_rsapss_3_32_3072 = 8,
    dsc_sha256_rsapss_65537_32_3072 = 9,
    dsc_sha256_rsapss_65537_32_4096 = 10,
    dsc_sha384_ecdsa_brainpoolP384r1 = 11,
    dsc_sha384_ecdsa_brainpoolP512r1 = 12,
    dsc_sha384_ecdsa_secp384r1 = 13,
    dsc_sha512_ecdsa_brainpoolP512r1 = 14,
    dsc_sha512_ecdsa_secp521r1 = 15,
    dsc_sha512_rsa_65537_4096 = 16,
    dsc_sha512_rsapss_65537_64_4096 = 17,
    dsc_sha256_rsapss_3_32_4096 = 18,
    dsc_sha1_ecdsa_secp256r1 = 19
}
export declare enum SignatureAlgorithmIndex {
    rsa_sha256_65537_2048 = 1,
    rsa_sha1_65537_2048 = 3,
    rsapss_sha256_65537_2048 = 4,
    ecdsa_sha1_secp256r1_256 = 7,
    ecdsa_sha256_secp256r1_256 = 8,
    ecdsa_sha384_secp384r1_384 = 9,
    rsa_sha256_65537_4096 = 10,
    rsa_sha1_65537_4096 = 11,
    rsapss_sha256_65537_4096 = 12,
    rsa_sha256_3_2048 = 13,
    rsa_sha256_65537_3072 = 14,
    rsa_sha512_65537_4096 = 15,
    rsapss_sha256_3_3072 = 16,
    rsapss_sha256_3_4096 = 17,
    rsapss_sha384_65537_3072 = 18,
    rsapss_sha256_65537_3072 = 19,
    ecdsa_sha256_brainpoolP256r1_256 = 21,
    ecdsa_sha384_brainpoolP384r1_384 = 22,
    ecdsa_sha256_secp384r1_384 = 23,
    ecdsa_sha384_brainpoolP256r1_256 = 24,
    ecdsa_sha512_brainpoolP256r1_256 = 25,
    ecdsa_sha512_brainpoolP384r1_384 = 26,
    ecdsa_sha1_brainpoolP224r1_224 = 27,
    ecdsa_sha256_brainpoolP224r1_224 = 28,
    ecdsa_sha512_brainpoolP512r1_512 = 29,
    ecdsa_sha224_brainpoolP224r1_224 = 30,
    rsa_sha256_3_4096 = 32,
    rsa_sha1_3_4096 = 33,
    rsa_sha384_65537_4096 = 34,
    rsapss_sha384_65537_4096 = 35,
    ecdsa_sha1_brainpoolP256r1_256 = 36,
    ecdsa_sha512_secp521r1_521 = 41
}
export declare const attributeToPosition: {
    issuing_state: number[];
    name: number[];
    passport_number: number[];
    nationality: number[];
    date_of_birth: number[];
    gender: number[];
    expiry_date: number[];
    older_than: number[];
    ofac: number[];
};
export declare const circuitToSelectorMode: {
    register: number[];
    prove_onchain: number[];
    prove_offchain: number[];
};
export declare const revealedDataTypes: {
    issuing_state: number;
    name: number;
    passport_number: number;
    nationality: number;
    date_of_birth: number;
    gender: number;
    expiry_date: number;
    older_than: number;
    passport_no_ofac: number;
    name_and_dob_ofac: number;
    name_and_yob_ofac: number;
};
export declare const CIRCUIT_CONSTANTS: {
    REGISTER_NULLIFIER_INDEX: number;
    REGISTER_COMMITMENT_INDEX: number;
    REGISTER_MERKLE_ROOT_INDEX: number;
    DSC_TREE_LEAF_INDEX: number;
    DSC_CSCA_ROOT_INDEX: number;
    VC_AND_DISCLOSE_REVEALED_DATA_PACKED_INDEX: number;
    VC_AND_DISCLOSE_FORBIDDEN_COUNTRIES_LIST_PACKED_INDEX: number;
    VC_AND_DISCLOSE_NULLIFIER_INDEX: number;
    VC_AND_DISCLOSE_ATTESTATION_ID_INDEX: number;
    VC_AND_DISCLOSE_MERKLE_ROOT_INDEX: number;
    VC_AND_DISCLOSE_CURRENT_DATE_INDEX: number;
    VC_AND_DISCLOSE_PASSPORT_NO_SMT_ROOT_INDEX: number;
    VC_AND_DISCLOSE_NAME_DOB_SMT_ROOT_INDEX: number;
    VC_AND_DISCLOSE_NAME_YOB_SMT_ROOT_INDEX: number;
    VC_AND_DISCLOSE_SCOPE_INDEX: number;
    VC_AND_DISCLOSE_USER_IDENTIFIER_INDEX: number;
};
export declare const MAX_BYTES_IN_FIELD = 31;
export declare const MAX_PUBKEY_DSC_BYTES = 525;
export declare const MAX_DATAHASHES_LEN = 320;
export declare const n_dsc = 120;
export declare const n_dsc_3072 = 120;
export declare const n_dsc_4096 = 120;
export declare const k_dsc = 35;
export declare const k_dsc_3072 = 35;
export declare const k_dsc_4096 = 35;
export declare const n_csca = 120;
export declare const k_csca = 35;
export declare const n_dsc_ecdsa = 64;
export declare const k_dsc_ecdsa = 4;
export declare const max_dsc_bytes = 1792;
export declare const max_csca_bytes = 1792;
export declare const countryCodes: {
    AFG: string;
    ALA: string;
    ALB: string;
    DZA: string;
    ASM: string;
    AND: string;
    AGO: string;
    AIA: string;
    ATA: string;
    ATG: string;
    ARG: string;
    ARM: string;
    ABW: string;
    AUS: string;
    AUT: string;
    AZE: string;
    BHS: string;
    BHR: string;
    BGD: string;
    BRB: string;
    BLR: string;
    BEL: string;
    BLZ: string;
    BEN: string;
    BMU: string;
    BTN: string;
    BOL: string;
    BES: string;
    BIH: string;
    BWA: string;
    BVT: string;
    BRA: string;
    IOT: string;
    BRN: string;
    BGR: string;
    BFA: string;
    BDI: string;
    CPV: string;
    KHM: string;
    CMR: string;
    CAN: string;
    CYM: string;
    CAF: string;
    TCD: string;
    CHL: string;
    CHN: string;
    CXR: string;
    CCK: string;
    COL: string;
    COM: string;
    COG: string;
    COD: string;
    COK: string;
    CRI: string;
    CIV: string;
    HRV: string;
    CUB: string;
    CUW: string;
    CYP: string;
    CZE: string;
    DNK: string;
    DJI: string;
    DMA: string;
    DOM: string;
    ECU: string;
    EGY: string;
    SLV: string;
    GNQ: string;
    ERI: string;
    EST: string;
    SWZ: string;
    ETH: string;
    FLK: string;
    FRO: string;
    FJI: string;
    FIN: string;
    FRA: string;
    GUF: string;
    PYF: string;
    ATF: string;
    GAB: string;
    GMB: string;
    GEO: string;
    DEU: string;
    "D<<": string;
    GHA: string;
    GIB: string;
    GRC: string;
    GRL: string;
    GRD: string;
    GLP: string;
    GUM: string;
    GTM: string;
    GGY: string;
    GIN: string;
    GNB: string;
    GUY: string;
    HTI: string;
    HMD: string;
    VAT: string;
    HND: string;
    HKG: string;
    HUN: string;
    ISL: string;
    IND: string;
    IDN: string;
    IRN: string;
    IRQ: string;
    IRL: string;
    IMN: string;
    ISR: string;
    ITA: string;
    JAM: string;
    JPN: string;
    JEY: string;
    JOR: string;
    KAZ: string;
    KEN: string;
    KIR: string;
    PRK: string;
    KOR: string;
    KWT: string;
    KGZ: string;
    LAO: string;
    LVA: string;
    LBN: string;
    LSO: string;
    LBR: string;
    LBY: string;
    LIE: string;
    LTU: string;
    LUX: string;
    MAC: string;
    MDG: string;
    MWI: string;
    MYS: string;
    MDV: string;
    MLI: string;
    MLT: string;
    MHL: string;
    MTQ: string;
    MRT: string;
    MUS: string;
    MYT: string;
    MEX: string;
    FSM: string;
    MDA: string;
    MCO: string;
    MNG: string;
    MNE: string;
    MSR: string;
    MAR: string;
    MOZ: string;
    MMR: string;
    NAM: string;
    NRU: string;
    NPL: string;
    NLD: string;
    NCL: string;
    NZL: string;
    NIC: string;
    NER: string;
    NGA: string;
    NIU: string;
    NFK: string;
    MKD: string;
    MNP: string;
    NOR: string;
    OMN: string;
    PAK: string;
    PLW: string;
    PSE: string;
    PAN: string;
    PNG: string;
    PRY: string;
    PER: string;
    PHL: string;
    PCN: string;
    POL: string;
    PRT: string;
    PRI: string;
    QAT: string;
    REU: string;
    ROU: string;
    RUS: string;
    RWA: string;
    BLM: string;
    SHN: string;
    KNA: string;
    LCA: string;
    MAF: string;
    SPM: string;
    VCT: string;
    WSM: string;
    SMR: string;
    STP: string;
    SAU: string;
    SEN: string;
    SRB: string;
    SYC: string;
    SLE: string;
    SGP: string;
    SXM: string;
    SVK: string;
    SVN: string;
    SLB: string;
    SOM: string;
    ZAF: string;
    SGS: string;
    SSD: string;
    ESP: string;
    LKA: string;
    SDN: string;
    SUR: string;
    SJM: string;
    SWE: string;
    CHE: string;
    SYR: string;
    TWN: string;
    TJK: string;
    TZA: string;
    THA: string;
    TLS: string;
    TGO: string;
    TKL: string;
    TON: string;
    TTO: string;
    TUN: string;
    TUR: string;
    TKM: string;
    TCA: string;
    TUV: string;
    UGA: string;
    UKR: string;
    ARE: string;
    GBR: string;
    USA: string;
    UMI: string;
    URY: string;
    UZB: string;
    VUT: string;
    VEN: string;
    VNM: string;
    VGB: string;
    VIR: string;
    WLF: string;
    ESH: string;
    YEM: string;
    ZMB: string;
    ZWE: string;
};
export type Country3LetterCode = keyof typeof countryCodes;
export declare function getCountryCode(countryName: string): string | string;
export declare const contribute_publicKey = "-----BEGIN RSA PUBLIC KEY-----\nMIICCgKCAgEAv/hm7FZZ2KBmaeDHmLoRwuWmCcNKT561RqbsW8ZuYSyPWJUldE9U\nCf0lW3K1H5lsSDkl0Cq84cooL9f6X59Mffb/N24ZKTdL0xdcPwjk4LbcrVm8qubL\n0a/4uCNoZZ1my4nxbpLxYtbr8CNmUGvBOVKf8IcjsY6VghIZrO63G6BN/G44su1Z\nWcHpboGt9SDQK4enCyKxnCD+PbDYlewSA0n3GRajFfZex1bj1EvrS2hTLv8oNH5e\n9H+3TUke0uO6Ttl0bZepoMmPlpAXhJByISqC6SLth4WFIH+G1I/xt9AEM7hOfLMl\nKQv/3wlLEgEueRryKAHB2tqkaDKVJyw+tOyWj2iWA+nVgQKAxO4hOw01ljyVbcx6\nKboXwnamlZPFIx4tjEaZ+ClXCFqvXhE9LDFK11QsYzJZl0aRVfTNqcurhEt7SK0f\nqzOBhID0Nxk4k9sW1uT6ocW1xp1SB2WotORssOKIAOLJM8IbPl6n/DkYNcfvyXI7\n4BlUrf6M2DgZMYATabIy94AvopHJOyiRfh4NpQPDntWnShiI1em2MmtXiWFCdVFV\n6/QfJTKVixJpVfDh386ALXc97EPWDMWIalUwYoV/eRSMnuV8nZ0+Ctp3Qrtk/JYd\n+FWhKbtlPeRjmGVr6mVlvDJ7KqtY5/RqqwfWeXhXezGhQqQ/OoQQCRkCAwEAAQ==\n-----END RSA PUBLIC KEY-----";
export declare const DEFAULT_RPC_URL = "https://mainnet.optimism.io";
export declare const REGISTER_CONTRACT_ADDRESS = "0x3F346FFdC5d583e4126AF01A02Ac5b9CdB3f1909";
export declare const SBT_CONTRACT_ADDRESS = "0x601Fd54FD11C5E77DE84d877e55B829aff20f0A6";
