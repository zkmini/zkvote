export declare function packBytes(unpacked: any): bigint[];
export declare function computeIntChunkLength(byteLength: number): number;
export declare function packBytesArray(unpacked: number[]): bigint[];
export declare function toUnsigned(byte: number): number;
export declare function toSigned(byte: number): number;
export declare const toBinaryString: (byte: any) => string;
export declare function splitToWords(number: bigint, wordsize: number, numberElement: number): string[];
export declare function bytesToBigDecimal(arr: number[]): string;
export declare function hexToDecimal(hex: string): string;
export declare function hexToSignedBytes(hexString: string): number[];
export declare function toUnsignedByte(signedByte: number): number;
export declare function bigIntToChunkedBytes(num: BigInt | bigint, bytesPerChunk: number, numChunks: number): string[];
export declare function hexStringToSignedIntArray(hexString: string): any[];
export declare function hexToBin(n: string): string;
export declare function num2Bits(n: number, inValue: bigint): bigint[];
export declare function derToBytes(derValue: string): any[];
