"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapSecpCurves = exports.oidMap = void 0;
exports.getSecpFromNist = getSecpFromNist;
exports.getFriendlyName = getFriendlyName;
exports.extractHashFunction = extractHashFunction;
exports.oidMap = {
    '1.2.840.113549.3.7': '3des',
    '2.16.840.1.101.3.4.1.2': 'aes128',
    '2.16.840.1.101.3.4.1.5': 'aes128wrap',
    '2.16.840.1.101.3.4.1.22': 'aes192',
    '2.16.840.1.101.3.4.1.25': 'aes192wrap',
    '2.16.840.1.101.3.4.1.42': 'aes256',
    '2.16.840.1.101.3.4.1.45': 'aes256wrap',
    '1.3.36.3.3.2.8.1.1.1': 'brainpoolP160r1',
    '1.3.36.3.3.2.8.1.1.2': 'brainpoolP160t1',
    '1.3.36.3.3.2.8.1.1.3': 'brainpoolP192r1',
    '1.3.36.3.3.2.8.1.1.4': 'brainpoolP192t1',
    '1.3.36.3.3.2.8.1.1.5': 'brainpoolP224r1',
    '1.3.36.3.3.2.8.1.1.6': 'brainpoolP224t1',
    '1.3.36.3.3.2.8.1.1.7': 'brainpoolP256r1',
    '1.3.36.3.3.2.8.1.1.8': 'brainpoolP256t1',
    '1.3.36.3.3.2.8.1.1.9': 'brainpoolP320r1',
    '1.3.36.3.3.2.8.1.1.10': 'brainpoolP320t1',
    '1.3.36.3.3.2.8.1.1.11': 'brainpoolP384r1',
    '1.3.36.3.3.2.8.1.1.12': 'brainpoolP384t1',
    '1.3.36.3.3.2.8.1.1.13': 'brainpoolP512r1',
    '1.3.36.3.3.2.8.1.1.14': 'brainpoolP512t1',
    '2.5.4.6': 'C',
    '1.2.840.113549.1.9.16.3.6': 'CMS3DESwrap',
    '1.2.840.113549.1.9.16.3.7': 'CMSRC2wrap',
    '2.5.4.3': 'CN',
    '1.3.6.1.5.5.7.2.1': 'CPS',
    '0.9.2342.19200300.100.1.25': 'DC',
    '1.3.14.3.2.7': 'des',
    '2.5.4.13': 'Description',
    '1.2.840.10046.2.1': 'DH',
    '2.5.4.46': 'dnQualifier',
    '1.2.840.10040.4.1': 'DSA',
    '1.3.14.3.2.27': 'dsaSHA1',
    '1.2.840.113549.1.9.1': 'E',
    '1.2.156.11235.1.1.2.1': 'ec192wapi',
    '1.2.840.10045.2.1': 'ECC',
    '1.3.133.16.840.63.0.2': 'ECDH_STD_SHA1_KDF',
    '1.3.132.1.11.1': 'ECDH_STD_SHA256_KDF',
    '1.3.132.1.11.2': 'ECDH_STD_SHA384_KDF',
    '1.2.840.10045.3.1.7': 'ECDSA_P256',
    '1.3.132.0.34': 'ECDSA_P384',
    '1.3.132.0.35': 'ECDSA_P521',
    '1.2.840.113549.1.9.16.3.5': 'ESDH',
    '2.5.4.42': 'G',
    '2.5.4.43': 'I',
    '2.5.4.7': 'L',
    '1.2.840.113549.2.2': 'md2',
    '1.2.840.113549.1.1.2': 'md2RSA',
    '1.2.840.113549.2.4': 'md4',
    '1.2.840.113549.1.1.3': 'md4RSA',
    '1.2.840.113549.2.5': 'md5',
    '1.2.840.113549.1.1.4': 'md5RSA',
    '1.2.840.113549.1.1.8': 'mgf1',
    '2.16.840.1.101.2.1.1.20': 'mosaicKMandUpdSig',
    '2.16.840.1.101.2.1.1.19': 'mosaicUpdatedSig',
    '1.2.840.10045.3.1.1': 'nistP192',
    '1.3.132.0.33': 'nistP224',
    '1.3.6.1.5.5.7.6.2': 'NO_SIGN',
    '2.5.4.10': 'O',
    '2.5.4.11': 'OU',
    '2.5.4.20': 'Phone',
    '2.5.4.18': 'POBox',
    '2.5.4.17': 'PostalCode',
    '1.2.840.113549.3.2': 'rc2',
    '1.2.840.113549.3.4': 'rc4',
    '1.2.840.113549.1.1.1': 'RSA',
    '1.2.840.113549.1.1.7': 'RSAES_OAEP',
    '1.2.840.113549.1.1.10': 'RSASSA_PSS',
    '2.5.4.8': 'S',
    '1.3.132.0.9': 'secP160k1',
    '1.3.132.0.8': 'secP160r1',
    '1.3.132.0.30': 'secP160r2',
    '1.3.132.0.31': 'secP192k1',
    '1.3.132.0.32': 'secP224k1',
    '1.3.132.0.10': 'secP256k1',
    '2.5.4.5': 'SERIALNUMBER',
    '1.3.14.3.2.26': 'sha1',
    '1.2.840.10040.4.3': 'sha1DSA',
    '1.2.840.10045.4.1': 'sha1ECDSA',
    '1.2.840.113549.1.1.5': 'sha1RSA',
    '1.2.840.10045.4.3.1': 'sha224ECDSA',
    '1.2.840.113549.1.1.14': 'sha224RSA',
    '2.16.840.1.101.3.4.2.1': 'sha256',
    '1.2.840.10045.4.3.2': 'sha256ECDSA',
    '1.2.840.113549.1.1.11': 'sha256RSA',
    '2.16.840.1.101.3.4.2.2': 'sha384',
    '1.2.840.10045.4.3.3': 'sha384ECDSA',
    '1.2.840.113549.1.1.12': 'sha384RSA',
    '2.16.840.1.101.3.4.2.3': 'sha512',
    '1.2.840.10045.4.3.4': 'sha512ECDSA',
    '1.2.840.113549.1.1.13': 'sha512RSA',
    '2.5.4.4': 'SN',
    '1.2.840.10045.4.3': 'specifiedECDSA',
    '2.5.4.9': 'STREET',
    '2.5.4.12': 'T',
    '2.23.133.2.1': 'TPMManufacturer',
    '2.23.133.2.2': 'TPMModel',
    '2.23.133.2.3': 'TPMVersion',
    '2.23.43.1.4.9': 'wtls9',
    '2.5.4.24': 'X21Address',
    '1.2.840.10045.3.1.2': 'x962P192v2',
    '1.2.840.10045.3.1.3': 'x962P192v3',
    '1.2.840.10045.3.1.4': 'x962P239v1',
    '1.2.840.10045.3.1.5': 'x962P239v2',
    '1.2.840.10045.3.1.6': 'x962P239v3',
};
exports.mapSecpCurves = {
    ECDSA_224: 'secp224r1',
    ECDSA_P256: 'secp256r1',
    ECDSA_P384: 'secp384r1',
    ECDSA_P521: 'secp521r1',
};
function getSecpFromNist(nist) {
    switch (nist) {
        case 'nistP224':
            return 'secp224r1';
        case 'nistP256':
            return 'secp256r1';
        case 'nistP384':
            return 'secp384r1';
        case 'nistP521':
            return 'secp521r1';
    }
    return nist;
}
function getFriendlyNameSecpCurves(friendlyName) {
    return exports.mapSecpCurves[friendlyName] || friendlyName;
}
function getFriendlyName(oid) {
    return getFriendlyNameSecpCurves(exports.oidMap[oid]) || 'Unknown Algorithm';
}
function extractHashFunction(friendlyName) {
    if (friendlyName.toLowerCase().includes('sha1')) {
        return 'sha1';
    }
    if (friendlyName.toLowerCase().includes('sha256')) {
        return 'sha256';
    }
    if (friendlyName.toLowerCase().includes('sha384')) {
        return 'sha384';
    }
    if (friendlyName.toLowerCase().includes('sha512')) {
        return 'sha512';
    }
    throw new Error('hash function not found in: ' + friendlyName);
    return 'unknown';
}
